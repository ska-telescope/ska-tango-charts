{{- /*
tango-util.vault-static-secret.tpl
Parameters:
- local (the local chart must include vaultAddress)
- name (of the VaultStaticSecret)
- secretKeys (interface containing secret keys in vault)
- secretPath (secret path in vault)
- secretMount (engine to use)
*/}}
{{ define "ska-tango-util.vault-static-secret.tpl" }}

{{- $labels := coalesce .local.Values.global.labels .local.Values.labels "label:none" }}
{{- $annotations := coalesce .local.Values.global.annotations .local.Values.annotations }}

{{- $secretSource := dict }}
{{- if and .secretPath (eq (split "/" .secretPath)._1 "data") }}
  {{- $_ := set $secretSource "mount" ((split "/" .secretPath)._0)}}
  {{- $_ := set $secretSource "path" (join "/" (slice (regexSplit "/" .secretPath -1) "2")) }}
{{- else }}
  {{- $_ := set $secretSource "mount" (coalesce .secretMount "dev") }}
  {{- $_ := set $secretSource "path" .secretPath }}
{{- end }}
---
apiVersion: secrets.hashicorp.com/v1beta1
kind: VaultStaticSecret
metadata:
  name: {{ .name }}
  namespace: {{ .local.Release.Namespace }}
{{- if $labels }}
  labels:
{{ toYaml $labels | indent 4 }}
{{- end }}
{{- if $annotations }}
  annotations:
{{ toYaml $annotations | indent 4 }}
{{- end }}
spec:
  type: kv-v2
  mount: {{ $secretSource.mount }}
  path: {{ $secretSource.path }}
  refreshAfter: {{ coalesce .refreshAfter "360s" }}
  destination:
    name: {{ .name }}
    create: true
    overwrite: true
    transformation:
      excludeRaw: true
# Include fields that don't have transforms directly
{{- $includeKeys := list }}
{{- range .secretKeys }}
{{- if not (hasKey . "transform") }}
{{- $includeKeys = append $includeKeys .secretKey }}
{{- end }}
{{- end }}
      includes: {{ $includeKeys | toJson }}
# Add as templates fields that have a transform
      templates:
{{- range .secretKeys -}}
{{- if and (hasKey . "transform") .transform }}
        {{ .secretKey | toString }}:
          text: >-
            {{ .transform }}
{{- end }}
{{ end }}
{{- end }}
