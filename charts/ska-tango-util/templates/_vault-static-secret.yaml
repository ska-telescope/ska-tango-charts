{{- /*
tango-util.vault-static-secret.tpl
Parameters:
- local (the local chart must include vaultAddress)
- name (of the SecretProviderClass)
- secretKeys (interface containing secret keys in vault)
- secretPath (secret path in vault)
- secretMount (engine to use)
*/}}
{{ define "ska-tango-util.vault-static-secret-svc.tpl" }}

{{- $labels := coalesce .local.Values.global.labels .local.Values.labels "label:none" }}
{{- $annotations := coalesce .local.Values.global.annotations .local.Values.annotations }}

---
apiVersion: secrets.hashicorp.com/v1beta1
kind: VaultStaticSecret
metadata:
  name: {{ .name }}
  namespace: {{ .local.Release.Namespace }}
{{- if $labels }}
  labels:
{{ toYaml $labels | indent 4 }}
{{- end }}
{{- if $annotations }}
  annotations:
{{ toYaml $annotations | indent 4 }}
{{- end }}
spec:
  mount: {{ .secretMount }}
  path: {{ .secretPath }}
  destination:
    name: {{ .name }}
    create: true
    overwrite: true
    transformation:
      excludeRaw: true
      excludes:
        - .*
      templates:
{{- range .secretKeys }}
        {{ .secretKey | toString | replace "_" "-" }}:
          text: >-
            {{ printf "{{" }} get .Secrets "{{ .secretKey }}" {{ printf "}}" }}
{{- end }}
  refreshAfter: {{ coalesce .refreshAfter "360s" }}

{{- end }}
