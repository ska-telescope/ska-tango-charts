{{- /*
tango-util.operator.tpl
Parameters:
- deviceserver (the deviceserver entire yaml tag)
- image (to be used for the deviceserver)
- local (the local chart)
- instance (of the device server)
*/}}
{{ define "ska-tango-util.operator-svc.tpl" }}
{{- $labels := coalesce .local.Values.global.labels .local.Values.labels "label:none" }}
{{- $annotations := coalesce .local.Values.global.annotations .local.Values.annotations }}
{{- $default_tango_host := printf "%s-%s:10000" "databaseds-tango-base-" .local.Release.Name }}
{{- $tango_host := tpl (coalesce .local.Values.global.tango_host .local.Values.tango_host $default_tango_host | toString) .local }}
{{- $databaseds_name := (split ":" $tango_host)._0 }} 
{{- $cluster_domain := coalesce .local.Values.global.cluster_domain "cluster.local" }}
{{- $chart := .local }}
{{- $deviceserver := .deviceserver }}
{{- $deviceserver_name := tpl (coalesce .name .deviceserver.name | toString) .local }}
{{- if ($deviceserver.secrets) }}
{{- if not $chart.Values.global.minikube }}
{{- range $secret := .deviceserver.secrets }}
{{- $secretMount := coalesce $secret.secretMount $chart.Values.secretMount $chart.Values.global.secretMount  "dev" }}
{{- $secret_name := trunc -63 (printf "%s-%s" $deviceserver_name ($secret.secretPath | toString | replace "/" "-" )) }}
{{- $context := dict "local" $chart "name" $secret_name "secretKeys" $secret.env "secretPath" $secret.secretPath "secretMount" $secretMount }}
{{ template "ska-tango-util.vault-static-secret.tpl" $context }}
{{- end }} # range $secret := .deviceserver.secrets
{{- end }} # if not $chart.Values.global.minikube
{{- end }} # if (.deviceserver.secrets)
{{- $legacy_compatibility := pluck "legacy_compatibility" .deviceserver .local.Values | default (list true) | has true}}
{{- range $instance := $deviceserver.server.instances }}
{{- $safe_instance := $instance.name | toString | replace "_" "-" }}
{{- if has $safe_instance $deviceserver.instances }}
---
apiVersion: tango.tango-controls.org/v1
kind: DeviceServer
metadata:
  name: {{$deviceserver_name | toString }}-{{ $safe_instance }}
  namespace: {{ $chart.Release.Namespace }}
  labels:
{{ toYaml $labels | indent 4 }}
    component: {{tpl ($deviceserver_name | toString) $chart }}-{{ $safe_instance }}
    function: {{ $deviceserver.function }}
    domain: {{ $deviceserver.domain }}
    subsystem: {{ $chart.Values.subsystem }}
{{- if $annotations }}
  annotations:
{{ toYaml $annotations | indent 4 }}
{{- end }}
spec:
  legacycompatibility: {{ if ne $legacy_compatibility true}}false{{ else }}true{{ end }}
  clusterDomain: {{ $cluster_domain }}
{{- if or ($chart.Values.global.minikube) ($chart.Values.global.exposeAllDS) ($deviceserver.exposeDS) ($instance.exposeDS)}}
  enableLoadBalancer: true
{{- end }}
  databaseds: {{ $databaseds_name }}
{{- $instance_image := dig "image" dict $instance}}
{{- $server_image_registry := pluck "registry" $instance_image $deviceserver.image | first}}
{{- $server_image_name := pluck "image" $instance_image $deviceserver.image | first}}
{{- $server_image_tag := pluck "tag" $instance_image $deviceserver.image | first}}
  image: "{{ tpl ($server_image_registry | toString) $chart }}/{{ tpl ($server_image_name | toString) $chart }}:{{ tpl ($server_image_tag | toString) $chart }}"
  imagePullPolicy: {{ tpl ($deviceserver.image.pullPolicy | toString) $chart }}
  args: "{{ $safe_instance | toString }}"
{{- if or (hasKey $deviceserver "volume") (and ($deviceserver.secrets) (not $chart.Values.global.minikube)) ($deviceserver.extraVolumes) ($instance.extraVolumes)}}
  volumes:
{{- if hasKey $deviceserver "volume" }}
  - name: volume-data
    persistentVolumeClaim:
      claimName: {{ $deviceserver.volume.existingClaimName | default (printf "%s-pvc-%s" $deviceserver.volume.name $chart.Release.Name) }}
{{- end }}
{{- with $deviceserver.extraVolumes }}
{{- . | toYaml | nindent 2 }}
{{- end }}
{{- with $instance.extraVolumes }}
{{- . | toYaml | nindent 2 }}
{{- end }}
{{- end }}
{{- if or (hasKey $deviceserver "volume") (and ($deviceserver.secrets) (not $chart.Values.global.minikube)) ($deviceserver.extraVolumeMounts) ($instance.extraVolumeMounts)}}
  volumeMounts:
{{- with $deviceserver.volume }}
  - name: volume-data
    mountPath: {{ .mountPath }}
    readOnly: {{ (hasKey . "readOnly" | ternary .readOnly true) }}{{/* https://github.com/helm/helm/issues/3308 */}}
{{- end }}
{{- with $deviceserver.extraVolumeMounts }}
{{- . | toYaml | nindent 2 }}
{{- end }}
{{- with $instance.extraVolumeMounts }}
{{- . | toYaml | nindent 2 }}
{{- end }}
{{- end }}
  dsname: "{{ $deviceserver.server.name }}"
{{- if $deviceserver.postStart }}
  postStart: "{{ $deviceserver.postStart }}"
{{- end }}
{{- if $deviceserver.preStop }}
  preStop: "{{ $deviceserver.preStop }}"
{{- end }}
  config: |
    {
      "servers": {
        "{{ $deviceserver.server.name }}" : {
          {{- range $index_instance,$instance := $deviceserver.server.instances }}
          {{- if has $instance.name $deviceserver.instances }}
          {{- if hasKey $deviceserver "tmp_start_instance" }},{{end}}
          {{- $_ := set $deviceserver "tmp_start_instance" "1" }}
          "{{ $instance.name }}": {
            {{- range $index_class, $class := $instance.classes }}
            {{- if $index_class}},{{end}}
            "{{ $class.name }}": {
              {{- range $index_device, $device := $class.devices }}
              {{- if $index_device}},{{end}}
              {{- $ctx := (dict "chart" $chart "props_obj" $device) }}
              "{{ $device.name }}": {{ include "ska-tango-util.dsconfig-properties.tpl" $ctx | indent 14 | trim }}
              {{- end }}
            }
            {{- end }}
          }
          {{- end }}
          {{- end }}
        }
      }{{ if $deviceserver.class_properties }},
      "classes": {
        {{- range $index_class_prop_group, $class_prop_group := $deviceserver.class_properties }}
        {{- if $index_class_prop_group}},{{end}}
        {{- $ctx := (dict "chart" $chart "props_obj" $class_prop_group) }}
        "{{ $class_prop_group.name }}": {{ include "ska-tango-util.dsconfig-properties.tpl" $ctx | indent 8 | trim }}
        {{- end }}
      }
      {{- end }}
    }
    {{- $_ := unset $deviceserver "tmp_start_instance" }}
{{- if $deviceserver.command }}
  command: "{{ $deviceserver.command }}"
{{- else }}
  script: |
{{- $context := dict "deviceserver" $deviceserver "DEBUG" $chart.Values.global.DEBUG }}
{{- include "ska-tango-util.entrypoints-script.tpl" $context | nindent 4 }}
{{- end }}
{{- $dependencies := concat ($deviceserver.depends_on | default list) ($instance.depends_on | default list)}}
{{- if $dependencies }}
  dependsOn:
{{- range $index, $device := $dependencies }}
  - "{{ coalesce $device.device $device.host | toString }}"
{{- end }}
{{- end }}
{{- if or ($chart.Values.global.environment_variables) ($deviceserver.environment_variables) (hasKey $deviceserver "volume") (and ($deviceserver.secrets) (not $chart.Values.global.minikube)) }}
  env:
{{- range $index, $envvar := $chart.Values.global.environment_variables }}
  - name: {{$envvar.name}}
    value: {{ tpl ($envvar.value | toString) $chart | quote }}
{{- end }}
{{- range $index, $envvar := $deviceserver.environment_variables }}
  - name: {{$envvar.name}}
    value: {{ tpl ($envvar.value | toString) $chart | quote }}
{{- end }}
{{- end }}
{{- if ($deviceserver.secrets) }}
{{- range $secret := $deviceserver.secrets }}
{{- $secret_name := trunc -63 (printf "%s-%s" $deviceserver_name ($secret.secretPath | toString | replace "/" "-" )) }}
{{- range $env := $secret.env }}
  - name: {{ $env.envName }}
{{- if $chart.Values.global.minikube }}
    value: {{ tpl ($env.default | toString) $chart | quote }}
{{- else }}
    valueFrom:
      secretKeyRef:
        name: {{ $secret_name }}
        key: {{ $env.secretKey }}
{{- end }}
{{- end }}
{{- end }}
{{- end }}
{{- if not $chart.Values.do_not_constraint_resources }}
  resources:
{{ toYaml (coalesce $instance.resources $deviceserver.resources $chart.Values.resources) | indent 4 }}
{{- end }}
{{- with (coalesce $deviceserver.securityContext $chart.Values.securityContext) }}
  securityContext:
    {{- toYaml . | nindent 4 }}
{{- end }}
{{- with (coalesce $instance.nodeSelector $deviceserver.nodeSelector $chart.Values.nodeSelector) }}
  nodeSelector:
    {{- toYaml . | nindent 4 }}
{{- end }}
{{- with (coalesce $instance.affinity $deviceserver.affinity $chart.Values.affinity) }}
  affinity:
    {{- toYaml . | nindent 4 }}
{{- end }}
{{- with (coalesce $instance.tolerations $deviceserver.tolerations $chart.Values.tolerations) }}
  tolerations:
    {{- toYaml . | nindent 4 }}
{{- end }}
{{- end }} ## if has
{{- end }} # range instances
{{- end }} # ska-tango-util.operator-svc.tpl